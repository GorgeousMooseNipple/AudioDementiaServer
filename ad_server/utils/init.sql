CREATE TABLE IF NOT EXISTS artist (
id SERIAL PRIMARY KEY,
title VARCHAR(64) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genre (
id SERIAL PRIMARY KEY,
title VARCHAR(64) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS app_user (
id SERIAL PRIMARY KEY,
login VARCHAR(64) NOT NULL UNIQUE,
pass_hash VARCHAR(64) NOT NULL
);

CREATE TABLE IF NOT EXISTS playlist (
id SERIAL PRIMARY KEY,
title VARCHAR(64) NOT NULL,
song_count BIGINT,
user_id BIGINT,
FOREIGN KEY (user_id) REFERENCES app_user(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS album (
id SERIAL PRIMARY KEY,
title VARCHAR(64) NOT NULL,
year SMALLINT,
cover_small VARCHAR(256),
cover_medium VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS album_artist (
album_id BIGINT,
artist_id BIGINT,
FOREIGN KEY(album_id) REFERENCES album(id) ON DELETE NO ACTION,
FOREIGN KEY(artist_id) REFERENCES artist(id) ON DELETE NO ACTION,
UNIQUE(album_id, artist_id)
);

CREATE TABLE IF NOT EXISTS song (
id SERIAL PRIMARY KEY,
title VARCHAR(64) NOT NULL,
file_path VARCHAR(128) NOT NULL,
duration BIGINT,
album_position SMALLINT,
listens_count BIGINT,
artist_id BIGINT,
album_id BIGINT,
FOREIGN KEY(artist_id) REFERENCES artist(id) ON DELETE NO ACTION,
FOREIGN KEY(album_id) REFERENCES album(id) ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS playlist_song (
id SERIAL PRIMARY KEY,
playlist_id BIGINT,
song_id BIGINT,
song_position BIGINT,
FOREIGN KEY(playlist_id) REFERENCES playlist(id) ON DELETE CASCADE,
FOREIGN KEY(song_id) REFERENCES song(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS album_genre (
    id SERIAL PRIMARY KEY,
    album_id INTEGER,
    genre_id INTEGER,
    FOREIGN KEY(album_id) REFERENCES album(id) ON DELETE CASCADE,
    FOREIGN KEY(genre_id) REFERENCES genre(id) ON DELETE CASCADE
)







